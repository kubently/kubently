services:
  redis:
    image: redis:7-alpine
    container_name: kubently-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - kubently-network

  api:
    build:
      context: ..
      dockerfile: deployment/docker/api/Dockerfile
    container_name: kubently-api
    ports:
      - "8080:8080"  # Expose directly for local dev (no nginx proxy)
    environment:
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379

      # Authentication
      - API_KEYS=dev:test-api-key,test-key-2

      # LLM Provider (set at least one via .env file)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - LLM_PROVIDER=${LLM_PROVIDER:-anthropic-claude}

      # A2A Configuration
      - A2A_ENABLED=true
      - A2A_EXTERNAL_URL=http://localhost:8080/a2a/

      # Performance & Session
      - LOG_LEVEL=DEBUG
      - MAX_COMMANDS_PER_FETCH=10
      - COMMAND_TIMEOUT=30
      - SESSION_TTL=300
      - PORT=8080
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../kubently:/app/kubently:ro  # For development hot reload
      - ../prompts:/etc/kubently/prompts:ro  # Mount prompts
    networks:
      - kubently-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  executor:
    build:
      context: ..
      dockerfile: deployment/docker/executor/Dockerfile
    container_name: kubently-executor
    environment:
      # Executor Configuration
      - KUBENTLY_API_URL=http://api:8080
      - CLUSTER_ID=local-dev
      - KUBENTLY_TOKEN=generated-token

      # TLS Configuration (not needed for HTTP)
      - KUBENTLY_SSL_VERIFY=false

      # Executor Type (sse is default)
      - EXECUTOR_TYPE=sse

      # Logging
      - LOG_LEVEL=DEBUG
    depends_on:
      api:
        condition: service_healthy
    # NOTE: Kubeconfig volume mount commented out for local testing
    # From inside a container, localhost/127.0.0.1 clusters (like kind) are not accessible.
    # Uncomment if using Docker Desktop Kubernetes or remote clusters accessible from containers.
    # volumes:
    #   - ~/.kube:/home/kubently/.kube:ro
    networks:
      - kubently-network
    restart: unless-stopped

volumes:
  redis-data:
    driver: local

networks:
  kubently-network:
    driver: bridge